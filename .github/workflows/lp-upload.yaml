name: Launchpad Upload
on:
  workflow_call:
    inputs:
      repo:
        type: string
        required: true
        description: Repository to build
      branch:
        type: string
        description: Git branch to build
        default: debian/master
      series:
        type: string
        description: Build series
        default: jammy
      ppa:
        type: string
        description: PPA of the LP user to upload package
        default: ppa
  workflow_dispatch:
    inputs:
      repo:
        type: string
        required: true
        description: Repository to build
      branch:
        type: string
        description: Git branch to build
        default: debian/master
      series:
        type: string
        description: Build series
        default: jammy
      ppa:
        type: string
        description: PPA of the LP user to upload package
        default: ppa

jobs:
  gbp-build:
    uses: ./.github/workflows/gbp-build.yaml
    secrets: inherit
    with:
      repo: ${{ inputs.repo }}
      branch: ${{ inputs. branch }}
      series: ${{ inputs.series }}
  launchpad-upload:
    name: LP Upload
    needs: [gbp-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y dput
      - name: Configure Dput
        run: |
          cp config/.dput.cf ~/
          sed -i "s/<your_launchpad_id>/${{ secrets.LP_USER }}/g" ~/.dput.cf
          sed -i "s/<ppa_name>/${{ inputs.ppa }}/g" ~/.dput.cf
      - name: Import Keys
        run: |
          sudo apt update
          sudo apt install -y ca-certificates
          echo "${{ secrets.GPG_PUB_KEY }}" > pub.key
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > private.key
          gpg --import pub.key
          gpg --import private.key
          rm *.key
      - name: Parse Project Name
        id: parse-project-name
        run: echo "name=$(basename ${{ inputs.repo }} .git)" >> $GITHUB_OUTPUT
      - uses: actions/download-artifact@v3
        with:
          name: ${{ steps.parse-project-name.outputs.name }}
      - name: Upload to Launchpad
        run: |
          dput my-ppa ./build-area/*source.changes
      - name: Clean Up
        if: always()
        run: |
          rm -rf ~/.gnupg
